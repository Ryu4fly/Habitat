<!DOCTYPE html>
<!-- saved from url=(0031)https://joshuahume.netlify.app/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="./Joshua Mark Hume_files/main.js" defer=""></script>
    <link rel="stylesheet" href="./Joshua Mark Hume_files/style.css">
    <link rel="icon" type="image/png" href="https://joshuahume.netlify.app/favicon-32x32.png">
    <title>Joshua Mark Hume</title>
  </head>
  <body cz-shortcut-listen="true">
    <div class="main-container">
      <div class="info">
        <div class="avatar"></div>
        <h1>Joshua Mark Hume</h1>
        <p class="info-description">
          Hello. My name is Joshua and I am a nerd. I like making things, breaking things, and putting them back
          together again. Please have a look through my projects.
        </p>
        <h3>Programming</h3>
        <p class="info-description">
          ‚≠êÔ∏èJavaScript ‚≠êÔ∏èReact ‚≠êÔ∏èNode ‚≠êÔ∏èExpress ‚≠êÔ∏èRuby ‚≠êÔ∏èRails ‚≠êÔ∏èSQL ‚≠êAudio Programming ‚≠êÔ∏èGame programming
        </p>
        <h3>Education</h3>
        <p class="info-description">
          I have an MA in Teaching English to Speakers of Other Languages and am passionate about the place where tech
          and education intersect.
        </p>
        <h3>Music</h3>
        <p class="info-description">
          I am the founder and sole full-time member of the Tokyo / Austin based experimental music group
          <a href="https://soundcloud.com/lead-sister-ii">Lead Sister II.</a>
        </p>
        <h3>Cycling‚Äç</h3>
        <p class="info-description">
          Unbeknownst to many I am an adept bicycle mechanic, restorer of vintage bicycles, explorer of back roads, and
          maker of maps.
        </p>
        <div class="sm-links">
            <a href="https://www.linkedin.com/in/joshua-hume-0259691ab/"><img src="./Joshua Mark Hume_files/linkedin.png" alt="linked"></a>
            <a href="https://github.com/HatAndBread"><img src="./Joshua Mark Hume_files/github.png" alt="github"></a>
            <a href="mailto:%20valencelectron@hotmail.com"><img src="./Joshua Mark Hume_files/email.png" alt="email"></a>
        </div>
      </div>
      <div class="cards-container">
        <div class="card">
            <div class="card-title">
          <h2>One Hand Band</h2>
          </div>
          <div id="ohb" class="picture" style="background-image: url(&quot;./drum-machine.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
                <a href="https://one-hand-band.glitch.me/">One Hand Band</a> is a progressive web app that allows users
                to play music wth friends across borders and overseas in real-time with the aid of web sockets. Imagine
                a chat-room (remember those?) in which your only mode of communication is music. The tech stack is
                React + Socket IO + SQLite3 running on Node. Audio processing is done with the aid of Tone JS, an
                amazing JavaScript library by Yotam Mann that greatly simplifies the Web Audio API.
              </p>
              <p>
                I had been obsessed with the idea of using web sockets to collaborate musically with others for a long
                time and am really happy with how it turned out. Although at first I thought it would only be
                useful for making abstract soundscape type music due to time lag issues, this turned out to
                not be the case. The lag is generally around 500 ms and is quite regular, so once you get the
                feel for it it is actually possible to play quite consistent rhythms. I spent much of the winter working
                on this when I perhaps should have been attending to more pressing matters, so I would be delighted if
                anyone out there aside from me got some enjoyment out of this. Give it a try! üòá
              </p>
              <iframe id="ohb-video" width="100%" height="300px" src="./Joshua Mark Hume_files/XWfBwchcjDM.html" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
            </div>
          </div>
        </div>

        <div class="card">
            <div class="card-title">
          <h2>Kanjikakikikai</h2>
          </div>
          <div id="kanjikakikikai" class="picture" style="background-image: url(&quot;./kanji2.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
                <a href="https://kanjikakikikai.glitch.me/">Kanjikakikikai</a> is one of those projects that I built
                because I actually wanted to use it myself. While there are a plethora of apps out there for studying
                kanji, almost all of them are focused on reading. As a long-time learner of Japanese I find that while
                simple exposure is good enough to be able to „Å™„Çì„Å®„Å™„Åè read kanji, writing is a completely different
                story. It takes concerted and regular practice.
              </p>
              <p>
                Enter Kanjikakikikai (help me think of a better name please!). The idea is quite simple. The user is
                randomly presented with a word written in hiragana from their preferred study set and they try to write
                it in kanji. The user then checks their kanji against a professionally hand-written kanji (thanks to the
                <a href="https://app.kanjialive.com/api/docs">Kanji Alive API</a>). In addition to selecting from
                pre-existing study sets, users are able to edit and save their own study sets.
              </p>
              <p>
                Having recently completed several projects using React when I made this, with Kanjikakikikai I set out
                to try building a reactive frontend using only vanilla JavaScript. I'm happy with the end result, but
                definitely learned the value of using frameworks like React and Vue. Full tech stack üëâ Express, NeDB
                (Mongo DB clone), EJS, and p5 JS. In the future I hope to rebuild this app with Rails and add more
                social features such as shared study sets.
              </p>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-title">
          <h2>S2PD - A JavaScript Game Engine</h2>
          </div>
          <div id="s2pd" class="picture" style="background-image: url(&quot;./s2pd2.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
                One of my first truly big coding project, <a href="https://github.com/HatAndBread/s2pd">S2PD</a> started out as a very simple challenge to myself; program a 2d game in plain vanilla JavaScript without relying on any external libraries.
                As the game grew more and more complex I realized that the small library of methods I had written for working with HTML5 canvas could be used for much more than just the game it was intended for.
                Soon I entirely threw out my original game idea and decided to turn the library into its own full fledged game engine.
              </p>
              <p>Although it was written quite early on in my adventure as a coder and there are many things I would change about it today, I still feel that S2PD holds up as a quick and dirty way to write a game in JavaScript.
                I learned a great deal about object oriented architecture from it and still find myself adding it to projects every time I need to work with a canvas.
              </p>
              <p>The first fully functional game I programmed with S2PD üëá</p>
              <iframe frameborder="0" src="./Joshua Mark Hume_files/2710852.html" allowfullscreen="" width="100%" height="520"><a href="https://hat-and-beard.itch.io/space-s2pd">Play Space, s2pd! on itch.io</a></iframe>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-title">
          <h2>Chinpunkanpun - My First NPM Package</h2>
          </div>
          <div id="chinpun" class="picture" style="background-image: url(&quot;./chinpun2.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
                Tired of lorem ipsum? I am, which is what lead me to finally make and publish my first npm package,
                <a href="https://www.npmjs.com/package/chinpunkanpun">Chinpunkanpun</a>. True to its name, Chinpunkanpun, Japanese for gibberish, randomly produces meaningless English sentences.
                The results can be remarkably complex and are almost always grammatically correct.
                </p><p>Give it a try! üëâ<code>&gt; npm i chinpunkanpun</code></p>
              <p></p>
            </div>
          </div>
        </div>

         <div class="card">
          <div class="card-title">
          <h2>Mumbo Jumbo</h2>
          </div>
          <div id="mumbo" class="picture" style="background-image: url(&quot;./mumbo2.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
               Vaguely inspired by surrealist writing techniques, <a href="https://mumbojumbo.glitch.me/">Mumbo Jumbo</a> is a game I made for my own high school students to stimulate their imaginations and practice creative writing. Here's how it works: <br>

                    ‚≠êÔ∏èThe teacher hosts a game and generates a pin number.<br>
                    ‚≠êÔ∏èParticipants join the game using the provided pin.<br>
                    ‚≠êÔ∏èStudents start writing a story.<br>
                    ‚≠êÔ∏èThe teacher shuffles the students' stories.<br>
                    ‚≠êÔ∏èEach student receives another student's story and has to continue it.<br>
              </p>
              <p>Tech stack üëâ Socket IO, Express, SQLite3, vanilla JS üç¶</p>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-title">
          <h2>Browser Theremin</h2>
          </div>
          <div id="theremin" class="picture" style="background-image: url(&quot;./theremin1.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
               One of my first attempts at building a largish application with React, <a href="https://there-amen.netlify.app/">Browser Theremin</a> allows users to create theremin-like music in their web browser. Replete with effects and background drones, it is possible to create some quite lovely music with this.
              </p>
            <iframe width="100%" height="300" src="./Joshua Mark Hume_files/_UX7KXMukRU.html" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-title">
          <h2>Book-A-Cook</h2>
          </div>
          <div id="cook" class="picture" style="background-image: url(&quot;./cook2.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
               <a href="https://bookachef.herokuapp.com/">Book A Cook</a> is a Rails app I built with my teammates Ryugi and Chiara at Le Wagon Tokyo's coding bootcamp.
               Book A Cook allows users to offer their services as chefs or book a meal from other users.
               Coming from Node / React world, learning the more traditional approach of Rails was quite a challenge, but I learned
               a lot about how to  build large industrial-grade apps with robust and portable architectures.
              </p>
            </div>
          </div>
        </div>

                <div class="card">
            <div class="card-title">
          <h2>Nicotine Derby</h2>
          </div>
          <div id="nicotine" class="picture" style="background-image: url(&quot;./nicotine.png&quot;); background-size: cover; background-repeat: no-repeat; background-position: center center;"></div>
          <div class="description">
            <div>
              <p>
                <a href="https://habitat467tyo.herokuapp.com/">Nicotine  Derby</a> is a Rails app that I built with my team at Le Wagon Tokyo's coding bootcamp for our final project.
              </p>
              <p>
                It is half smoking tracker and half (pretend) gambling app. Users compete in races to see who smokes the least, and are able to
                bet on races that they aren't racing in.
              </p>
            </div>
          </div>
        </div>

      </div>
    </div>
    <div class="bottom">Icons made by <a href="https://www.freepik.com/" title="Freepik">Freepik</a> from <a href="https://www.flaticon.com/" title="Flaticon">www.flaticon.com</a></div>
  

</body></html>